  /*
    For your reference:
    class BinaryTreeNode {
        Integer value;
        BinaryTreeNode left;
        BinaryTreeNode right;

        BinaryTreeNode(Integer value) {
            this.value = value;
            this.left = null;
            this.right = null;
        }
    }
    */
    static ArrayList<ArrayList<Integer>> reverse_level_order_traversal(BinaryTreeNode root) {
         ArrayList<ArrayList<Integer>> result = new ArrayList<>();
         if (root == null)
            return result;

        Queue<BinaryTreeNode> queue = new LinkedList<>();
        queue.add(root);

        while(!queue.isEmpty()) {
            int size = queue.size();

            ArrayList<Integer> levelOrder = new ArrayList<>();
            for (int i=0; i<size; i++) {
                BinaryTreeNode node = queue.remove();
                