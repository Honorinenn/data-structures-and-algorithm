1)  Problem

Count Islands
Given a two-dimensional matrix of 0s and 1s, find the number of islands.

An island is a group of connected 1s or a standalone 1. A cell in the matrix can be connected to up to 8 neighbors: 2 vertical, 2 horizontal and 4 diagonal.

Example
{
"matrix": [
[1, 1, 0, 0, 0],
[0, 1, 0, 0, 1],
[1, 0, 0, 1, 1],
[0, 0, 0, 0, 0],
[1, 0, 1, 0, 1]
]
}
Output:

5
Notes
Use as little extra memory as possible.
Solve the problem without allocating a visited matrix.
Constraints:

1 <= number of rows <= 450
1 <= number of columns <= 450




2)  Problem


Find Largest Island
Given a two-dimensional grid of 0s and 1s, find the size of the largest island. If there is no island return 0.

An island is a group of 1s connected vertically or horizontally.

Example One
{
"grid": [
[1, 1, 0],
[1, 1, 0],
[0, 0, 1]
]
}
Output:

4
There are two islands:

[(0, 0), (0, 1), (1, 0), (1, 1)]
[(2, 2)]
Size of the largest (first) island is 4.

Example Two
{
"grid": [
[0, 0, 0],
[0, 0, 0],
[0, 0, 0]
]
}
Output:

0
Notes
Constraints:

1 <= number of rows <= 200
1 <= number of columns <= 200





3)  Problem

Count Connected Components In An Undirected Graph
Given an undirected graph, find its total number of connected components.

Example One
Graph

{
"n": 5,
"edges": [[0 ,1], [1, 2], [0, 2], [3, 4]]
}
Output:

2
Example Two
Graph

{
"n": 4,
"edges": [[0 , 1], [0 , 3], [0 , 2], [2 , 1], [2 , 3]]
}
Output:

1
Notes
Constraints:

1 <= number of nodes <= 105
0 <= number of edges <= 105
0 <= node value < number of nodes






4)  Problem

Is It A Tree
Given an undirected graph, find out whether it is a tree.

The undirected edges are given by two arrays edge_start and edge_end of equal size. Edges of the given graph connect nodes edge_start[i] and edge_end[i] for all valid i.

Example One
Graph 1

{
"node_count": 4,
"edge_start": [0, 0, 0],
"edge_end": [1, 2, 3]
}
Output:

1
This graph is a tree because all the nodes are connected, and it does not have cycles.

Example Two
Graph 2

{
"node_count": 4,
"edge_start": [0, 0],
"edge_end": [1, 2]
}
Output:

0
This graph is not a tree because node 3 is not connected to the other nodes.

Example Three
Graph 3

{
"node_count": 4,
"edge_start": [0, 0, 1, 2],
"edge_end": [3, 1, 2, 0]
}
Output:

0
This graph is not a tree: nodes 0, 1 and 2 form a cycle.

Example Four
Graph 4

{
"node_count": 4,
"edge_start": [0, 0, 0, 1],
"edge_end": [1, 2, 3, 0]
}
Output:

0
This graph is not a tree because the two edges that connect nodes 0 and 1 form a cycle.

Notes
A tree is an undirected connected acyclic graph.
Constraints:

1 <= number of nodes <= 105
1 <= number of edges <= 105
0 <= node value < number of nodes